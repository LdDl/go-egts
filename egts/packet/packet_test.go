package packet

import (
	"encoding/hex"
	"encoding/json"
	"fmt"
	"log"
	"testing"
)

func TestIncomingPacket(t *testing.T) {

	egtsAuthHex := "0100020b00b0000e0001779d001100977c8e5702241100009edd050f02021018009edd050f5fb4b49e8d7da2359b00009bc8550f030012010011040018110000120c000000070000000000000000001307000300000000000014050002860014041b0700400000fbff00001b0700000100000000001b0700010100000000001b07000201006c6300001b0700030100000000001b0700040100000000001b0700050100000000001b0700000200000000001b070001020000000000dc85"
	// egtsAuthHex = "0100020b00f400010001182a000000970000000000150000ddd530120202101800ddd530120000000000000000ea00400000000000000000001104003800000014050002750026302a000100970000000017a20000e6d530120202101800e6d530120000000000000000ea00400000000000000000001104001800000014050002740026042a00020097000000000a170000f8d530120202101800f8d530120000000000000000ea00400000000000000000001104001800000014050002740026042a000300970000000002150000fad530120202101800fad530120000000000000000ea00400000000000000000001104001800000014050002740026048542"
	egtsAuth, _ := hex.DecodeString(egtsAuthHex)
	// egtsAuth := []byte{1, 0, 2, 11, 0, 176, 0, 14, 0, 1, 119, 157, 0, 17, 0, 151, 124, 142, 87, 2, 36, 17, 0, 0, 158, 221, 5, 15, 2, 2, 16, 24, 0, 158, 221, 5, 15, 95, 180, 180, 158, 141, 125, 162, 53, 155, 0, 0, 155, 200, 85, 15, 3, 0, 18, 1, 0, 17, 4, 0, 24, 17, 0, 0, 18, 12, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 7, 0, 3, 0, 0, 0, 0, 0, 0, 20, 5, 0, 2, 134, 0, 20, 4, 27, 7, 0, 64, 0, 0, 251, 255, 0, 0, 27, 7, 0, 0, 1, 0, 0, 0, 0, 0, 27, 7, 0, 1, 1, 0, 0, 0, 0, 0, 27, 7, 0, 2, 1, 0, 108, 99, 0, 0, 27, 7, 0, 3, 1, 0, 0, 0, 0, 0, 27, 7, 0, 4, 1, 0, 0, 0, 0, 0, 27, 7, 0, 5, 1, 0, 0, 0, 0, 0, 27, 7, 0, 0, 2, 0, 0, 0, 0, 0, 27, 7, 0, 1, 2, 0, 0, 0, 0, 0, 220, 133}

	fmt.Println("Income", egtsAuth)

	parsedAuth, authCode := ReadPacket(egtsAuth)
	fmt.Println("auth code:", authCode)
	encoded := parsedAuth.Encode()
	log.Println(hex.EncodeToString(encoded))

	// 0100020b00b0000e0001779d001100977c8e5702241100009edd050f02021018009edd050f5fb4b49e8d7da2359b00001bc8550f0300120100110400120c0013070014050002860014041b07001b07001b07001b07001b07001b07001b07001b07001b070020c1
	// 0100020b00b0000e0001779d001100977c8e5702241100009edd050f02021018009edd050f5fb4b49e8d7da2359b00009bc8550f030012010011040018110000120c000000070000000000000000001307000300000000000014050002860014041b0700400000fbff00001b0700000100000000001b0700010100000000001b07000201006c6300001b0700030100000000001b0700040100000000001b0700050100000000001b0700000200000000001b070001020000000000dc85
	str, _ := json.Marshal(parsedAuth)
	fmt.Println(string(str))
	// resp := parsedAuth.PrepareAnswer()
	// encodedResp := resp.Encode()
	// hexResp := hex.EncodeToString(encodedResp)
	// trueResp := ""
	// if hexResp != trueResp {
	// 	t.Errorf("Response should be %s, but got %s", trueResp, hexResp)
	// }

	// 0100030b002200010000e601000018000000580202000300000000000300010000000300020000000300030000ce79
	// 0100030b0037000100005601000006000000580202000300000000060001005802020003000100000600020058020200030002000006000300580202000300030000c09d

	// hexd := "0100020b00b0000e0001779d001100977c8e5702241100009edd050f02021018009edd050f5fb4b49e8d7da2359b00009bc8550f030012010011040018110000120c000000070000000000000000001307000300000000000014050002860014041b0700400000fbff00001b0700000100000000001b0700010100000000001b07000201006c6300001b0700030100000000001b0700040100000000001b0700050100000000001b0700000200000000001b070001020000000000dc85"
	// heas, _ := hex.DecodeString(hexd)
	// log.Println(heas)
	t.Error(0)
}

func TestPTresponsePacket(t *testing.T) {

	egtsAuthHex := "0100030b001000000000b300000006000000580101000300000000d9d1"
	egtsAuth, _ := hex.DecodeString(egtsAuthHex)

	fmt.Println("Income", egtsAuth)
	parsedAuth, authCode := ReadPacket(egtsAuth)

	str, _ := json.Marshal(parsedAuth)
	fmt.Println(authCode, string(str))

	fmt.Println("Encode:")
	enc := parsedAuth.Encode()
	fmt.Println(enc, hex.EncodeToString(enc))
	t.Error(0)
}

func TestAuthResponsePacket(t *testing.T) {

	egtsAuthHex := "0100020b0020000000014f1900000010010101160000000000523836363130343032393639303030380004417f"
	egtsAuthHex = "0100020b0020000000014f19000000100101011600000000005238363637393530333034383630353200045155" // + 0100030b001000000000b300000006000000580101000300000000d9d1

	egtsAuth, _ := hex.DecodeString(egtsAuthHex)

	fmt.Println("Income", egtsAuth)
	parsedAuth, authCode := ReadPacket(egtsAuth)

	str, _ := json.Marshal(parsedAuth)
	fmt.Println(authCode, string(str))

	resp := parsedAuth.PrepareAnswer()
	fmt.Println("Encoded resp :")
	encResp := resp.Encode()

	str, _ = json.Marshal(resp)
	fmt.Println(authCode, string(str))

	fmt.Println(encResp, hex.EncodeToString(encResp))
	t.Error(0)
}
