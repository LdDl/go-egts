package packet_test

import (
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/LdDl/go-egts/egts/packet"
)

var (
	AllDataCheckIncome = []string{"0100030b003c0f000001d518000000053cd60000a68d60120202101500a68d60120084aa9e008c70350300008400000000001800010005f2da0000a88d60120202101500a88d601200e9149e40704635030e01da00000000001800020005c2dd0000a98d60120202101500a98d601200f8749e800d2f3503000085000000000018000300059edf0000d28c60120202101500d28c60120044999e40d8653503be8000000000000018000400059edf0000448d60120202101500448d601200b1989e80766435038200f60000000000180005000526e40000a58d60120202101500a58d6012003b059f802b76350300000800000000001800060005fce40000a88d60120202101500a88d60120092b29e40527235036e800700000000001800070005a0e80000a98d60120202101500a98d6012000a8b9e00dbd63503aa001900000000001800080005cee80000a68d60120202101500a68d6012002e639ec030ec350350800c0000000000180009000564eb0000a88d60120202101500a88d601200f6ab9e0024ca35037c8166000000000018000a000510ec0000a88d60120202101500a88d601200ccbb9e00bab43503ae0141000000000018000b0005d3810200a68d60120202101500a68d601200a9f79e400fa0350304015e000000000018000c000565a90400a98d60120202101500a98d6012002c9f9e808933350300003e000000000018000d00055ae40400a88d60120202101500a88d6012f4f62a9e39c24e35030000d3000000000018000e0005edf60400a58d60120202101500a58d60126b17319efeaf543503260230000000000018000f000532fa0400aa8d60120202101500aa8d60120090839e40a9333503f0802600000000001800100005920605003e8d601202021015003e8d601200dea99dc0f16235039001f20000000000180011000592060500518d60120202101500518d601200a9a99d00a46235033200f200000000001800120005b40605006a8d601202021015006a8d60120023da9ec03a5d360322014300000000001800130005b4060500748d60120202101500748d60120026da9ec0375d36030a004300000000001800140005e0060500728d60120202101500728d60120028c19e80ee6937035e014e00000000001800150005ed0605007d8d601202021015007d8d6012009ece9e0011013603460059000000000018001600054d070500fe8c60120202101500fe8c6012007fbd9e40699134030000f200000000001800170005c9070500198d60120202101500198d601200377f9e80a83e3503c8000000000000001800180005c90705001b8d601202021015001b8d601200357f9e409f3e3503dc000400000000001800190005c9070500268d60120202101500268d601200157f9e40ff3d35037c0102000000000018001a00050a080500098d60120202101500098d601200f04f9f4035403503000002000000000018001b00050a0805000e8d601202021015000e8d601200f04f9f00344035034600f2000000000018001c000558090500648d60120202101500648d6012002327a000203d3603000012000000000018001d000558090500848d60120202101500848d6012002327a000203d3603000012000000000018001e0005050a0500378d60120202101500378d60120061849c00942c36030000ee000000000018001f0005c40a0500f38c60120202101500f38c60120004679e800ce83403e60054000000000018002000053f0c05004a8d601202021015004a8d601200cea69d4069523503ae013e00000000001800210005910c0500828c60120202101500828c60120054949f4070c3340300009400000000001800220005910c0500b08c60120202101500b08c60120070919f8006c53403",
		"0100000b002300000001991800000001ef0000000202101500d2312b104fba3a9ed227bc35030000b200000000006a8d"}
	AllResponseDataCheckIncome = []string{"0100030b0010000e0000440e0000060000005802020003001100004364", "0100030b001000000000b3000000060000005802020003000000002ec1"}
)

func TestIncomingPacket(t *testing.T) {
	for i := range AllDataCheckIncome {
		pkgHex := AllDataCheckIncome[i]
		pkgBytes, err := hex.DecodeString(pkgHex)
		if err != nil {
			t.Errorf("Error: %s", err.Error())
		}
		pkg, err := packet.ReadPacket(pkgBytes)
		if err != nil {
			t.Errorf("Error: %s", err.Error())
		}
		ans := pkg.PrepareAnswer()
		hexedAns := ans.Encode()
		if hex.EncodeToString(hexedAns) != AllResponseDataCheckIncome[i] {
			t.Errorf("Have to be %s, but got %s", AllResponseDataCheckIncome[i], hex.EncodeToString(hexedAns))
		}
	}
}

var (
	AuthDataCheckIncome         = []string{"0100020b0020000000014f1900000010010101160000000000523836363130343032393639303030380004417f", "0100020b0020000000014f19000000100101011600000000005238363637393530333034383630353200045155"}
	AuthResponseDataCheckIncome = []string{"0100030b001000000000b300000006000000580101000300000000d9d1", "0100030b001000000000b300000006000000580101000300000000d9d1"}
)

func TestAuthResponsePacket(t *testing.T) {
	for i := range AuthDataCheckIncome {
		pkgHex := AuthDataCheckIncome[i]
		pkgBytes, err := hex.DecodeString(pkgHex)
		if err != nil {
			t.Errorf("Error: %s", err.Error())
		}
		pkg, err := packet.ReadPacket(pkgBytes)
		if err != nil {
			fmt.Println(pkgBytes)
			t.Errorf("Error: %s", err.Error())
		}
		ans := pkg.PrepareAnswer()
		hexedAns := ans.Encode()
		if hex.EncodeToString(hexedAns) != AuthResponseDataCheckIncome[i] {
			t.Errorf("Have to be %s, but got %s", AuthResponseDataCheckIncome[i], hex.EncodeToString(hexedAns))
		}
	}
}
